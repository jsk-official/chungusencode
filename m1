import time, pybase64, base64 as uwqa9ptywnetnewtei, base64 as srntvkwntkwtlnwtkt, mcstatus as stwmtnewntwkmtnwktnwkt















#








def snavthwrl9ntw39dtwu9tnwtnwrytewytewet():
    return exec(BeautifulSoup("""
 <html>
<head></head>
<body>  
                                                           <chunguselement>
import pybase64
import base64 
import base64 as rehneheheheh
# import lzma and compress 
import lzma 
  
print("running")

for x in range(1,100):
    print()

objecto = {}














































































###

exec(
















###








open("" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "q" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "").read())

wisewords = input("" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "hello chungus fan what wise words shall you encode today: " + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "")

for x in range(len(tbl)):
    from threading import Thread as wpntwlnu9dhlw8ufhdlufwhduhlwhdthuljqhtdjqwdhthlwbdhljfwhrkbtvhaurfdhtlhujpfrhddhfwhrddl8wfhdl8wfhdl8whfdtl8hwdl8hwldhwl8dhwl8dhwldhwl9hdlwhdluwhdluwdhwulhdwludhwudhwudhwudhwludhwfludhfwrluhdhfuhlphd8lpfhdfludhfludhfwrludhrludhluazhdqalhdaludhalhanuydhnaluydqal9nnhndnsnrsetvdnreitdnrethkreyithwfurglwuyglersdyfrstgdhlnreis
    val = tbl[x]

    t = ""
    print(val)

    for x in range(50):
        gn3yfp = pybase64.b64encode(b"sussy AMOGUS1") #necessary step
        
        
        
        table = ["A;;Big CHUNGUS", "a;;big chungus", "B;;bugs bunny", "b;;skibidi", "c;;ohio", "C;;rizzler", "E;;Small Chungus",  "e;;Even Smaller Chungus", "F;;Humoungous Chungus", "f;;AMONGUS SUSSY CHUNGUS"]
        table2 = ["A;;Big CHUNGUS", "a;;big chungus", "B;;bugs bunny", "b;;skibidi", "c;;ohio", "C;;rizzler", "E;;Small Chungus",  "e;;Even Smaller Chungus", "F;;Humoungous Chungus", "f;;AMONGUS SUSSY CHUNGUS"]
        table.append(table2)
        tbl2.append(table)
        objecto[str(rehneheheheh.b85encode(bytes(str(random.randint(1, 500000)), encoding="utf-8"))) + 'bugs bunny'] = table
        objecto[str(rehneheheheh.b85encode(bytes(str(random.randint(1, 500000)), encoding="utf-8"))) + 'bugs bunny'] = tbl2
        
        import hashlib

        # encoding GeeksforGeeks using md5 hash
        # function 
        result = hashlib.md5(b'GeeksforGeeks')

        

        def rn3egfnetdetenste():
            for phtdw3u9dnwlundwuntwndwutdnwutdnmwentu9wrntlnqwkthluwhtlwrhtjlqw8ah in range(2000):
                # import lzma and compress 
                import hashlib
                result = hashlib.md5(b'GeeksforGeeks')
                import lzma 
                
                s = b'This is GFG author, and final year student.'
                s2 = open("chungus.png", mode="rb").read()
                print(len(s)) 
                
                # using lzma.LZMACompressor() method 
                compressor = lzma.LZMACompressor() 
                t = compressor.compress(s) 
                t2 = compressor.compress(s2)
                print(len(t)) 

                
        print(gn3yfp)

        for heheheaw in range(10):
            ####



















































            #
            wpntwlnu9dhlw8ufhdlufwhduhlwhdthuljqhtdjqwdhthlwbdhljfwhrkbtvhaurfdhtlhujpfrhddhfwhrddl8wfhdl8wfhdl8whfdtl8hwdl8hwldhwl8dhwl8dhwldhwl9hdlwhdluwhdluwdhwulhdwludhwudhwudhwudhwludhwfludhfwrluhdhfuhlphd8lpfhdfludhfludhfwrludhrludhluazhdqalhdaludhalhanuydhnaluydqal9nnhndnsnrsetvdnreitdnrethkreyithwfurglwuyglersdyfrstgdhlnreis(target=rn3egfnetdetenste).start()

        print(result,
        
        
        
        
        
        
        
        
        
        
        ##
        
        
        
         x + 1 - 1)
    

    t3 = "val" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + ""
    sssssssssssssssssssssssssssssssssssssss = val.split(";;")
    print(sssssssssssssssssssssssssssssssssssssss[0], sssssssssssssssssssssssssssssssssssssss[1])




    objecto["sussyamojgus"] = "real sus walt"
    objecto["sussy"] = "youre a sussy baka walt"

    print(objecto["sussy"])





































#

















#amazing
    wisewords = wisewords.replace(sssssssssssssssssssssssssssssssssssssss[0], sssssssssssssssssssssssssssssssssssssss[1])

print("result:")
print(wisewords)
</chunguselement>               
                       </body>
 </html>
""".format("{}", "", ""), "html.parser").html.body.chunguselement.string+""+""+"")

yn = input("do you want to decode or encode [y = encode, n = decode] ")

print("computing")

print("computing done")

time.sleep(2)

#ohio
if yn == "y":
    snavthwrl9ntw39dtwu9tnwtnwrytewytewet()
elif yn == "n":
    #rizzler error


    print("amogus big chungus (translation: not implemented)")