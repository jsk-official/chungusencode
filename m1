import time, pybase64, base64 as uwqa9ptywnetnewtei, base64 as srntvkwntkwtlnwtkt, mcstatus as stwmtnewntwkmtnwktnwkt














def snavthwrl9ntw39dtwu9tnwtnwrytewytewet():
    return exec(BeautifulSoup("""
<html>
<head></head>
<body><chunguselement>
import pybase64
import base64
# import lzma and compress 
import lzma 
  
print("running")

exec(open("q").read())

wisewords = input("hello chungus fan what wise words shall you encode today: ")

for x in range(len(tbl)):
    val = tbl[x]

    t = ""
    print(val)
    for x in range(1, 5000):
        gn3yfp = pybase64.b64encode(b"sussy AMOGUDS")

    t3 = "val" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + "" + ""
    sssssssssssssssssssssssssssssssssssssss = val.split(";;")
    print(sssssssssssssssssssssssssssssssssssssss[0], sssssssssssssssssssssssssssssssssssssss[1])
    wisewords.replace(sssssssssssssssssssssssssssssssssssssss[0], sssssssssssssssssssssssssssssssssssssss[1])

print("result:")
print(wisewords)
</chunguselement>
</body>
</html>
""".format("", ""), "html.parser").html.body.chunguselement.string+""+""+"")

yn = input("do you want to decode or encode [y = encode, n = decode] ")

print("computing")

for x in range(1, 5000):
    gn3yfp = pybase64.b64encode(b"sussy AMOGUDS")

print("computing done")

time.sleep(2)

if yn == "y":
    snavthwrl9ntw39dtwu9tnwtnwrytewytewet()
elif yn == "n":
    print("amogus big chungus (translation: not implemented)")